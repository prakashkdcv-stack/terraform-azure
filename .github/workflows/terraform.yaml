name: 'Terraform'

on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: Test

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    # Check the working directory and list files in it.
    - name: listFiles
      run: | 
          pwd
          ls -al

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    
    # Initialize the terraform workspace
    - name: Terraform init
      id: init
      shell: bash
      env:
          ARM_CLIENT_ID: ${{ secrets.AZ_SP_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZ_SP_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID }}
      run: terraform init
      working-directory: "CKA-infrasetup-terraform"

    # Planning the terraform configuration
    - name: Terraform plan
      id: plan
      shell: bash
      continue-on-error: false
      env:
          ARM_CLIENT_ID: ${{ secrets.AZ_SP_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZ_SP_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID }}
      run: terraform plan
      working-directory: "CKA-infrasetup-terraform"

